on write of file
schedule nearest job based on just-saved config
after that job runs, as a last task, find next nearest job and schedule

on startup find nearest job and schedule

we can also experiment with including an end time field, such that we could have interspersed breaks throughout the day and not just at night - this could allow for i.e. workout times.

move to start and end times, and change Bedtimes to be a List of weekdays, where each weekday has a value 0 - 6 for sorting,
and then within each weekday there is a list of non-overlapping start and end pairs, sortable as well. Thus finding the next nearest job
is a matter of a sublist starting from the current day, inclusive, and then taking the head of a 2-column sorted list.

See if you could even add validators for that on the UI.

Then also think about upgrading the hall pass system to have an "end hall pass" mode, where the button changes text
and changes password, resets delay (probably to 30 minutes or so) on click.

Lastly of course CRUD on custom filters

----

for custom pluckeye:

you can use the default GPOs if you block shells. This would mean giving up programming, but could work. downside: always another shell-runner.

alternately: generate firewall rules for each non-approved browser, don't worry about blocking launch. this ackchyually. if exe name is a known name, block. Get list.

Then switch chrome to administrator managed, and install pluckeye. Or create your own extension which would talk to your self-control backend.


Getting list of browsers:

https://stackoverflow.com/questions/43633190/getting-a-list-of-installed-browsers-on-the-computer

https://www.urtech.ca/2019/07/solved-gpo-to-block-software-by-file-name-path-hash-or-certificate/

Updated: win 10 does allow software restriction policies through local security policy, which is technically *not* a
GPO, though it does interact with the registry ultimately. Different path to setting registry settings I guess.

Seemingly not scriptable through powershell directly, only editable through secedit.exe
https://stackoverflow.com/questions/23260656/modify-local-security-policy-using-powershell

Design for the rest of browsers will be to update NN to have a custom filter to screen them